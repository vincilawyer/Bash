############################################################################################################################################################################################
############################################################################## 系统工具源代码   ########################################################################################
############################################################################################################################################################################################
### 系统工具选项 ###
system_menu=(
    "更新脚本"                  'startcode=1; base_load; Initial; update_dat; waitcon="false"; return'
    "个人配置设置"               'page "配置设置" "${config_menu[@]}"; continue'
    "程序管理"                  'page "程 序 管 理" "${Program_menu[@]}"'
    "网络管理"                  'page "网 络 管 理" "${Net_menu[@]}"'
    "任务管理"                  'page "任 务 管 理" "${Crontab_menu[@]}"'
    "环境配置管理"              'page  "环 境 配 置 管 理" "${Envconfig_menu[@]}"'
    "查看本机系统与核心信息（uname -a）"   "uname -a"
    "一键到位"                  'page "一 键 到 位" "${Onestep_menu[@]}"'
     )  
############################################################################################################################################################################################
############################################################################## 程序管理源代码   ########################################################################################
############################################################################################################################################################################################
###菜单栏
Program_menu=(
    "更新软件包列表及软件"                      "aptup"
    "查看所有重要程序systemd服务状态"           "status_all"
    "监测系统动态资源(top)"                "top; continue"
    "程序树(pstree -Aup)"             "pstree -Aup" 
    )    

#######  更新软件包列表及软件   ########
function aptup {
echo "开始更新软件包列表..."
apt update
echo "软件包列表更新完成，开始更新本机软件包..."
apt -y upgrade
echo "更新结束"
}

#######  检验程序安装情况   ########
function installed {
    local software_name=$1
    if which "$software_name" >/dev/null 2>&1; then
       echo -e "${GREEN}该程序已经安装，当前版本号为 $($software_name -v 2>&1)${NC}" 
       if confirm "是否需要重新安装或更新？" "已取消安装！"; then return 0; fi
       return 1
    else
      return 1
    fi
}

### 查看重要程序服务状况 ####
function status_all {
apps=(
"ufw"
"docker"
"nginx"
"warp-svc"
"tor"
"frps"
"alist"
)
   for app in "${apps[@]}"; do  
      zl="systemctl status $app"
      i=1
      while IFS= read -r line; do
          if (( "$i" == 1 )); then
              echo -e "${RED}${line}${NC}"
          else
              echo "$line"
          fi
          i=$((i+1))
      done < <($zl)
   done
}

############################################################################################################################################################################################
############################################################################## 网络管理源代码   ########################################################################################
############################################################################################################################################################################################
### 网络管理 ###
Net_menu=(
    "UFW防火墙管理"          'page " UFW 防 火 墙" "${ufw_menu[@]}"'
    "本机ip信息"               "ipinfo"    
    "查看网络端口监听状况(netstat -tulnp)"            "netstat -tulnp"
    "修改SSH登录端口和登录密码"   "change_ssh_port; change_login_password"
     )  
     
#####防火墙管理#####
ufw_menu=(
    "服务管理器"         'get_Service_menu "ufw"; page "UFW" "${Service_menu[@]}"'
    "启用防火墙规则"         "ufw enable"
    "停用防火墙规则"         "ufw disable"
    "查看防火墙规则"         "ufw status verbose"
    )  
    
###### 查看ip信息 ######
function ipinfo {
  echo "本机IP信息："
  hostname -I
  
#代理端口列表
apps=(
"Warp"
"Tor"
)
   echo "网络状况"
   echo "代理IP信息："
   for app in "${apps[@]}"; do  
       port_value=$(eval echo \$"${app}_port")
       echo "$app(端口$port_value)的代理IP地址为："
       curl --socks5-hostname localhost:"$port_value" http://api.ipify.org
      echo
   done
}

   

#######  修改SSH端口    #######  
path_ssh="/etc/ssh/sshd_config" 
function change_ssh_port {
    if settext "Port " " " "" 1 false false true true $path_ssh "SSH端口" "0-65535" 1 $port_regex; then
          echo -e "${GREEN}已正从防火墙规则中删除原SSH端口号：$old_text${NC}"
          ufw delete allow $old_text/tcp   
          echo -e "${GREEN}正在将新端口"$new_text"添加进防火墙规则中。${NC}"
          ufw allow "$new_text"/tcp  
          systemctl restart sshd
          echo -e "${GREEN}当前防火墙运行规则及状态为：${NC}"
          ufw status
    fi  
}

#######  修改登录密码    ####### 
function change_login_password {
    # 询问账户密码 
    if settext "@" "@" "" "" "" "" "" false "@********@" "SSH登录密码" "至少8位" 1 ".{8,}"; then 
         #修改账户密码
         chpasswd_output=$(echo "root:$new_text" | chpasswd 2>&1)
         if echo "$chpasswd_output" | grep -q "BAD PASSWORD" >/dev/null 2>&1; then
            echo -e "${RED}SSH登录密码修改失败,错误原因：${NC}"
            echo "$chpasswd_output" >&2
         else
            echo -e "${GREEN}SSH登录密码已修改成功！新密码为:$new_text,请妥善保管！${NC}"
         fi
   fi
}

############################################################################################################################################################################################
############################################################################## 任务管理源代码   ########################################################################################
############################################################################################################################################################################################
Crontab_menu=(
    "修订循环任务(crontab -e)"         "crontab -e; continue"
    "查看循环任务(crontab -l)"         "crontab -l"
    )    
############################################################################################################################################################################################
############################################################################## 环境配置管理源代码   ########################################################################################
############################################################################################################################################################################################
path_nonloginEnv="$HOME/.bashrc"
path_loginpageEnv="/etc/motd"
path_vimEnv="$HOME/.vimrc"
Envconfig_menu=(
    "查看个人non-login环境变量配置(vi $path_nonloginEnv)"         "vim $path_nonloginEnv; continue"
    "查看开机页面信息(vi $path_loginpageEnv)"                     "vim $path_loginpageEnv; continue"
    "查看vim配置(vi $path_vimEnv)"                                "vim $path_vimEnv; continue"
    )  
