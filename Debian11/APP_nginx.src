#############################################################################################################################################################################################
##############################################################################   10.Nginx模块  ################################################################################################
############################################################################################################################################################################################

### 菜单栏  ####
nginx_menu=(
    "服务管理器"                 'get_Service_menu "nginx"; page "Nginx" "${Service_menu[@]}"'
    "安装Nginx"              "install_Nginx"
    "设置Nginx配置"           'vim $path_nginx_config; continue'
    "查看Nginx日志"            "less +G /var/log/nginx/access.log; continue"
    )
    
### 路径 ###
#nginx配置文件路径 (查看配置：nano /etc/nginx/conf.d/default.conf)                      
path_nginx_config="/etc/nginx/conf.d/nginx.conf" 
#nginx日志文件路径
log_nginx="/var/log/nginx/access.log"
#nginx 80端口默认服务块文件路径
default_nginx="/etc/nginx/sites-enabled/default"

####### 安装Nginx ######
function install_Nginx {
        installed "nginx" && return    #检验安装
        echo -e "${GREEN}正在更新包列表${NC}"
        apt-get update
        echo -e "${GREEN}包列表更新完成${NC}"
        apt-get install nginx -y
        echo -e "${GREEN}正在调整防火墙规则，放开443端口。${NC}"
        ufw allow https 
        # 清空nginx对80端口默认服务块的配置内容
        echo "" > $default_nginx  
        echo -e "${GREEN}Nginx 安装完成，版本号为 $(nginx -v 2>&1)${NC}"
        echo -e "${GREEN}请到 /etc/nginx/conf.d 目录中修改Nginx配置${NC}"
}
                                                                   
#######  使用Certbot申请SSL证书的函数 ####### 
function apply_ssl_certificate {
   echo "维护中"
   return
    # 输入域名
    while true; do
        read -p "$(echo -e ${BLUE}"请输入申请SSL证书域名（不加www.）: ${NC}")" domain_name
        if [[ -z $domain_name ]]; then
          echo -e "${RED}未输入域名，退出申请操作${NC}"
          return
        elif [[ $domain_name =~ ^[a-zA-Z0-9]+([\-\.]{1}[a-zA-Z0-9]+)*\.[a-zA-Z]{2,}$ ]]; then
            break
        else
            echo -e "${RED}输入格式不正确，请重新输入${NC}"
        fi
    done

    # 输入邮箱
    while true; do
        read -p "$(echo -e ${BLUE}"请输入申请SSL证书邮箱: ${NC}")" email
        if [[ -z $email || ! $email =~ ^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$ ]]; then
            echo -e "${RED}输入格式不正确，请重新输入${NC}"
        else
            break
        fi
    done
    
  
    # 停止nginx运行
    if [ -x "$(command -v nginx)" ]; then
       systemctl stop nginx
       echo -e "${GREEN}为了防止80端口被占用，已停止nginx运行${NC}"
    fi  
  
    #关闭防火墙
    ufw disable 
    echo -e "${GREEN}为了防止证书申请失败，已关闭防火墙${NC}"

    # 检查并安装Certbot
    if [ -x "$(command -v certbot)" ]; then
      echo -e "${GREEN}本机已安装Certbot，无需重复安装，即将申请SSL证书...${NC}"
    else
      echo -e "${GREEN}正在更新包列表${NC}"
      sudo apt update
      echo -e "${GREEN}包列表更新完成${NC}"
      echo -e "${GREEN}正在安装Certbot...${NC}"
      apt install certbot certbot -y
      echo -e "${GREEN}Certbot安装完成，即将申请SSL证书...${NC}"
    fi
  
    # 申请证书
    certbot certonly --standalone --agree-tos -n -d $domain_name -m $email
    
    # 判断申请结果
    if check_ssl_certificate "$domain_name"; then
        echo -e "${GREEN}SSL证书申请已完成！${NC}"
        # 证书自动续约
        echo "0 0 1 */2 * service nginx stop; certbot renew; service nginx start;" | crontab
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}未成功启动证书自动续约${NC}"
        else
            echo -e "${GREEN}已启动证书自动续约${NC}"
        fi
    else
        echo -e "${RED}SSL证书申请失败！${NC}"
    fi
    
    # 重启nginx
    if [ -x "$(command -v nginx)" ]; then
       echo -e "${GREEN}正常恢复nginx运行${NC}"  
       systemctl start nginx
    fi  

    #重启防火墙
    echo -e "${GREEN}正在恢复防火墙运行${NC}"  
    ufw --force enable
}

#######  判断Certbot申请的SSL证书是否存在  ####### 
function check_ssl_certificate {
   echo "维护中"
   return
    domain_name="$1"
    ssl_path="$2"
    #搜索SSL证书
    search_result=$(find "$2/" -name fullchain.pem -print0 | xargs -0 grep -l "$domain_name" 2>/dev/null)
    if [[ -z "$search_result" ]]; then
      return false
    else
      return true
    fi
}
